{{- $_ := set . "BASE_GOLANG" "registry.deckhouse.io/base_images/golang:1.22.6-bullseye@sha256:260918a3795372a6d33225d361fe5349723be9667de865a23411b50fbcc76c5a" }}
{{- $_ := set . "BASE_SCRATCH"    "registry.deckhouse.ru/base_images/scratch@sha256:b054705fcc9f2205777d80a558d920c0b4209efdc3163c22b5bfcb5dda1db5fc" }}
{{- $_ := set . "BASE_ALPINE_DEV" "registry.deckhouse.ru/base_images/dev-alpine:3.16.3@sha256:c706fa83cc129079e430480369a3f062b8178cac9ec89266ebab753a574aca8e" }}
{{- $_ := set . "BASE_ALT_DEV"    "registry.deckhouse.ru/base_images/dev-alt:p10@sha256:76e6e163fa982f03468166203488b569e6d9fc10855d6a259c662706436cdcad" }}

{{ $binaries := "/opt/deckhouse/sds/lib/libblkid.so.1 /opt/deckhouse/sds/lib/libmount.so.1 /opt/deckhouse/sds/lib/libsmartcols.so.1 /opt/deckhouse/sds/bin/nsenter.static /opt/deckhouse/sds/lib/x86_64-linux-gnu/libudev.so.1 /opt/deckhouse/sds/lib/x86_64-linux-gnu/libcap.so.2 ld-linux-x86-64.so.2 /opt/deckhouse/sds/bin/lsblk.dynamic" }}
{{ $version := "2.39.3" }}
---
image: {{ $.ImageName }}-binaries-artifact
from: {{ $.BASE_ALT_DEV }}
final: false

shell:
  install:
  - apt-get update
  - |
    apt-get install -y \
    build-essential \
    git \
    pkg-config \
    gettext \
    autoconf \
    bison \
    libtool \
    libudev-devel \
    libblkid-devel-static \
    libsmartcols-devel-static \
    libmount-devel-static \
    automake \
    gettext \
    flex
  - cd /
  - git clone {{ env "SOURCE_REPO" }}/util-linux/util-linux.git
  - cd /util-linux
  - git checkout v{{ $version }}
  - ./autogen.sh
  - ./configure LDFLAGS="-static" --enable-static-programs -disable-all-programs --enable-nsenter
  - make install-strip
  - ./configure --prefix /opt/deckhouse/sds --with-udev
  - make install-strip
  - mkdir -p /opt/deckhouse/sds/lib/x86_64-linux-gnu/
  - cp /util-linux/nsenter.static /opt/deckhouse/sds/bin/nsenter.static
  - cp /lib64/libudev.so.1 /opt/deckhouse/sds/lib/x86_64-linux-gnu/libudev.so.1
  - cp /lib64/libc.so.6 /opt/deckhouse/sds/lib/x86_64-linux-gnu/libc.so.6
  - cp /lib64/libcap.so.2 /opt/deckhouse/sds/lib/x86_64-linux-gnu/libcap.so.2
  - cp /lib64/ld-2.32.so /opt/deckhouse/sds/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
  - cp /opt/deckhouse/sds/bin/lsblk /opt/deckhouse/sds/bin/lsblk.dynamic
  - /binary_replace.sh -i "{{ $binaries }}" -o /relocate

---
image: {{ $.ImageName }}-golang-artifact
from: {{ $.BASE_GOLANG }}
final: false

git:
  - add: /images/agent/src
    to: /src
    stageDependencies:
      setup:
        - "**/*"

shell:
  setup:
    - cd /src/cmd
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o /sds-node-configurator-agent
    - chmod +x /sds-node-configurator-agent

---
image: {{ $.ImageName }}-distroless-artifact
from: {{ $.BASE_ALPINE_DEV }}
final: false

shell:
  install:
    - mkdir -p /relocate/bin /relocate/sbin /relocate/etc /relocate/etc/ssl /relocate/usr/bin /relocate/usr/sbin /relocate/usr/share
    - cp -pr /tmp /relocate
    - cp -pr /etc/passwd /etc/group /etc/hostname /etc/hosts /etc/shadow /etc/protocols /etc/services /etc/nsswitch.conf /relocate/etc
    - cp -pr /usr/share/ca-certificates /relocate/usr/share
    - cp -pr /usr/share/zoneinfo /relocate/usr/share
    - cp -pr etc/ssl/cert.pem /relocate/etc/ssl
    - cp -pr /etc/ssl/certs /relocate/etc/ssl
    - echo "deckhouse:x:64535:64535:deckhouse:/:/sbin/nologin" >> /relocate/etc/passwd
    - echo "deckhouse:x:64535:" >> /relocate/etc/group
    - echo "deckhouse:!::0:::::" >> /relocate/etc/shadow

---
image: {{ $.ImageName }}-distroless
from: {{ $.BASE_SCRATCH }}
final: false

import:
  - image: {{ $.ImageName }}-distroless-artifact
    add: /relocate
    to: /
    before: setup

---
image: {{ $.ImageName }}
fromImage: {{ $.ImageName }}-distroless
import:
  - image: {{ $.ImageName }}-binaries-artifact
    add: /relocate
    to: /
    before: setup
  - image: {{ $.ImageName }}-golang-artifact
    add: /sds-node-configurator-agent
    to: /sds-node-configurator-agent
    before: setup

docker:
  ENTRYPOINT: ["/sds-node-configurator-agent"]
