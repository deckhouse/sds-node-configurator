{{- define "static_utils_copier_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- define "sds_node_configurator_agent_resources" }}
cpu: 50m
memory: 50Mi
{{- end }}

{{- if not .Values.sdsNodeConfigurator.disableDs }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sds-node-configurator
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "sds-node-configurator")) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: sds-node-configurator
  template:
    metadata:
      name: sds-node-configurator
      namespace: d8-{{ .Chart.Name }}
      {{- include "helm_lib_module_labels" (list . (dict "app" "sds-node-configurator")) | nindent 6 }}
    spec:
      {{- include "helm_lib_priority_class" (tuple . "cluster-medium") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node" "storage-problems") | nindent 6 }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: storage.deckhouse.io/sds-replicated-volume-node
                    operator: In
                    values:
                      - ""
              - matchExpressions:
                  - key: storage.deckhouse.io/sds-local-volume-node
                    operator: In
                    values:
                      - ""
              - matchExpressions:
                  - key: storage.deckhouse.io/sds-drbd-node
                    operator: In
                    values:
                      - ""
      imagePullSecrets:
        - name: {{ .Chart.Name }}-module-registry
      serviceAccountName: sds-node-configurator
      hostPID: true
      initContainers:
      - name: static-utils-copier
        image: {{ include "helm_lib_module_image" (list . "staticUtilsCopier") }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /opt/deckhouse/bin/sds
          name: opt-deckhouse-bin
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "static_utils_copier_resources" . | nindent 14 }}
{{- end }}
      containers:
      - name: sds-node-configurator-agent
        image: {{ include "helm_lib_module_image" (list . "agent") }}
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          seLinuxOptions:
            level: s0
            type: spc_t
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: LOG_LEVEL
{{- if eq .Values.sdsNodeConfigurator.logLevel "ERROR" }}
            value: "0"
{{- else if eq .Values.sdsNodeConfigurator.logLevel "WARN" }}
            value: "1"
{{- else if eq .Values.sdsNodeConfigurator.logLevel "INFO" }}
            value: "2"
{{- else if eq .Values.sdsNodeConfigurator.logLevel "DEBUG" }}
            value: "3"
{{- else if eq .Values.sdsNodeConfigurator.logLevel "TRACE" }}
            value: "4"
{{- end }}
        volumeMounts:
        - mountPath: /opt/deckhouse/bin/sds
          name: opt-deckhouse-bin
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "sds_node_configurator_agent_resources" . | nindent 14 }}
{{- end }}
      volumes:
      - hostPath:
          path: /opt/deckhouse/bin/sds
          type: Directory
        name: opt-deckhouse-bin
{{- end }}
