{{- if not .Values.sdsNodeConfigurator.disableDs }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sds-node-configurator
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "sds-node-configurator")) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: sds-node-configurator
  template:
    metadata:
      name: sds-node-configurator
      namespace: d8-{{ .Chart.Name }}
      {{- include "helm_lib_module_labels" (list . (dict "app" "sds-node-configurator")) | nindent 6 }}
    spec:
      {{- include "helm_lib_priority_class" (tuple . "cluster-medium") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node" "storage-problems") | nindent 6 }}
      nodeSelector:
        storage.deckhouse.io/sds-drbd-node: ""
      imagePullSecrets:
        - name: {{ .Chart.Name }}-module-registry
      serviceAccountName: sds-node-configurator
      containers:
      - name: sds-node-configurator-agent
        image: {{ include "helm_lib_module_image" (list . "agent") }}
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          seLinuxOptions:
            level: s0
            type: spc_t
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: LOG_LEVEL
{{- if eq .Values.sdsNodeConfigurator.logLevel "ERROR" }}
            value: "0"
{{- else if eq .Values.sdsNodeConfigurator.logLevel "WARN" }}
            value: "1"
{{- else if eq .Values.sdsNodeConfigurator.logLevel "INFO" }}
            value: "2"
{{- else if eq .Values.sdsNodeConfigurator.logLevel "DEBUG" }}
            value: "3"
{{- else if eq .Values.sdsNodeConfigurator.logLevel "TRACE" }}
            value: "4"
{{- end }}
        volumeMounts:
        - mountPath: /dev/
          name: host-device-dir
        - mountPath: /lib/modules
          name: host-modules-dir
          mountPropagation: Bidirectional
        - mountPath: /sys/
          name: host-sys-dir
        - mountPath: /run/udev/
          name: host-run-udev-dir
        - mountPath: /host-root/etc/machine-id
          name: host-machine-id
          readOnly: true
      volumes:
      - hostPath:
          path: /dev/
          type: ""
        name: host-device-dir
      - hostPath:
          path: /sys/
          type: Directory
        name: host-sys-dir
      - hostPath:
          path: /run/udev/
          type: Directory
        name: host-run-udev-dir
      - hostPath:
          path: /etc/machine-id
          type: File
        name: host-machine-id
      - hostPath:
          path: /lib/modules/
          type: DirectoryOrCreate
        name: host-modules-dir
{{- end }}
