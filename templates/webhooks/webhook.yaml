{{- if and (not (eq "dev" .Values.global.deckhouseVersion)) (semverCompare "<1.64" .Values.global.deckhouseVersion) }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: "d8-{{ .Chart.Name }}-pod-scheduler-mutation"
webhooks:
  - name: "d8-{{ .Chart.Name }}-pod-scheduler-mutation.storage.deckhouse.io"
    failurePolicy: Ignore
    namespaceSelector:
      matchExpressions:
        - key: heritage
          operator: NotIn
          values:
            - deckhouse
    rules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE"]
        resources: ["pods"]
        scope: "Namespaced"
    clientConfig:
      service:
        namespace: "d8-{{ .Chart.Name }}"
        name: "webhooks"
        path: "/pod-scheduler-mutate"
      caBundle: |
        {{ .Values.sdsLocalVolume.internal.customWebhookCert.ca }}

    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
{{- end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: "d8-{{ .Chart.Name }}-lsc-validation"
webhooks:
  - name: "d8-{{ .Chart.Name }}-lsc-validation.deckhouse.io"
    failurePolicy: Fail
    rules:
      - apiGroups: ["storage.deckhouse.io"]
        apiVersions: ["v1alpha1"]
        operations: ["CREATE", "UPDATE"]
        resources: ["localstorageclasses"]
        scope: "Cluster"
    clientConfig:
      service:
        namespace: "d8-{{ .Chart.Name }}"
        name: "webhooks"
        path: "/lsc-validate"
      caBundle: |
        {{ .Values.sdsLocalVolume.internal.customWebhookCert.ca }}

    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: "d8-{{ .Chart.Name }}-sc-validation"
webhooks:
  - name: "d8-{{ .Chart.Name }}-sc-validation.deckhouse.io"
    rules:
      - apiGroups: ["storage.k8s.io"]
        apiVersions: ["v1"]
        operations: ["*"]
        resources: ["storageclasses"]
        scope: "Cluster"
    clientConfig:
      service:
        namespace: "d8-{{ .Chart.Name }}"
        name: "webhooks"
        path: "/sc-validate"
      caBundle: |
        {{ .Values.sdsLocalVolume.internal.customWebhookCert.ca }}
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
